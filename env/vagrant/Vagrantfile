# -*- mode: ruby -*-
# vi: set ft=ruby :

required_plugins = %w(vagrant-cachier vagrant-reload vagrant-libvirt)

plugins_to_install = required_plugins.select { |plugin| not Vagrant.has_plugin? plugin }
if not plugins_to_install.empty?
  puts "Installing plugins: #{plugins_to_install.join(' ')}"
  if system "vagrant plugin install #{plugins_to_install.join(' ')}"
    exec "vagrant #{ARGV.join(' ')}"
  else
    abort "Installation of one or more plugins has failed. Aborting."
  end
end

Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu1604"
  config.vm.hostname = "loomvm"
  config.vm.synced_folder "../..", "/opt/loom", type: 'nfs'
  config.vm.synced_folder ".", "/vagrant", type: 'nfs'

  #config.vm.network :public_network, ip: '192.168.48.193', :dev => "br0", :mode => 'bridge'

  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = "machine"
  end

  #config.vm.provision "ansible_local" do |ansible|
  #  ansible.playbook = "vagrant.yml"
  #end
  #config.vm.provision :reload

  config.vm.provider :libvirt do |libvirt|
    #libvirt.connect_via_ssh = true
    libvirt.memory = 5120
    libvirt.cpus = 2
    libvirt.driver = "kvm"
    libvirt.cpu_mode = 'host-passthrough'

    #libvirt.channel :type => 'unix', :target_name => 'org.qemu.guest_agent.0', :target_type => 'virtio'

    ##libvirt.kernel = '/boot/vmlinuz-4.9.10-loom'
    libvirt.kernel = '/scratch/bes/git/loom-code/code/linux-4.9/arch/x86_64/boot/bzImage'
    libvirt.initrd = '/boot/initrd.img-4.9.10-loom'
    libvirt.cmd_line = 'root=/dev/sda3 console=ttyS0 net.ifnames=0 biosdevname=0'
  end
end
